<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:task="http://www.springframework.org/schema/task"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xmlns:p="http://www.springframework.org/schema/p"
   xmlns:c="http://www.springframework.org/schema/c"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:util="http://www.springframework.org/schema/util"
   xmlns:websocket="http://www.springframework.org/schema/websocket"
   xmlns:sec="http://www.springframework.org/schema/security"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd       
        http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd     
        http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
         http://www.springframework.org/schema/websocket
      http://www.springframework.org/schema/websocket/spring-websocket.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd   
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd   
      ">
   <context:component-scan base-package="springweb">
      <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
      <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
      <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
   </context:component-scan>   
  <!-- 
  #웹소켓 통신을 위한 선언
  1. java로 핸들러 클래스가 가능하게 mapper/adapter선언
   -->
   <!-- <mvc:default-servlet-handler/> -->
   <!-- 
   2. java핸들러 클래스 선언과 함게 client단에서 접속시 호출되는 url 지정
    -->
  <!-- <websocket:handlers>
  <websocket:mapping handler="chatHandler" path="/chat-ws.do"/>
  </websocket:handlers>
   -->
   <!-- 
   # 공통설정파일 위치 지정...
    -->
   <context:property-placeholder location="classpath:resource/config"/>
   
    
   <!-- 
   1. db연결처리 : dbcp(database connection pool)이용해서 연결... destory-method="close" 종료시 처리 기능메서드 선언..
    -->
   <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
      <property name="driverClassName" value="${jdbc.driver}"/>
      <property name="url" value="${jdbc.url}"/>
      <property name="username" value="${jdbc.user}"/>
      <property name="password" value="${jdbc.pwd}"/>
   </bean>
   <!-- 
   2. mybatis연동 : 위 dbcp 연동 처리
    -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="configLocation" value="classpath:resource/mybatis_config.xml"/>
   </bean>    
   <!-- 
   3. mybatis가 만드는 실제 객체를 생성하는 기준 interface dao가 있는 패키지 위치 지정..
      추가적인 dao 패키지가 필요하면 value="패키지명1, 패키지명2, ..."
   
    -->
    
    
    
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <property name="basePackage" value="springweb.a03_mvc.a03_dao, springweb.a04_mvc.a03_dao" />
   </bean> 
   
   <!-- 파일업로드 뷰 등록 -->
   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
   
     
   <!-- 라이브러리 추가 -->
    <bean id="btnViewResolver"
       class ="org.springframework.web.servlet.view.BeanNameViewResolver">
       <property name="order" value="0"></property>   
    </bean>    
    
  
    <!-- 
     1. 다국어 코드 등록을 위한 설정 위치 지정     
      -->
      <bean id="messageSource" 
            class="org.springframework.context.support.ResourceBundleMessageSource">
               <property name="basenames">
               <list>
                  <value>message.msg</value>
                  <!-- 패키지명 기준으로 message패키지의 msg파일 설정 -->
               </list>
               </property>
      </bean>
     <!-- 
     2. 언어 변환 처리를 위한 객체 등록
      -->
     <bean id="localeResolver" 
        class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>
    <!-- json 뷰 추가 -->
    <bean id="jsonView"
       class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
       <property name="contentType" value="text/html;charset=utf-8"/>       
    </bean> 
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
       <property name="order" value="1"></property>
    </bean>
    
      <!-- 
     # 메일 발송 서버접속 객체 선언
     -->
     <bean id="mailSender" class=
   "org.springframework.mail.javamail.JavaMailSenderImpl">
   		<property name="host" value="smtp.gmail.com"/>
   		<!-- 이메일을 전송할 SMTP 서버의 호스트 이름을 지정. 여기서는 Gmail의 SMTP서버 설정 -->
   		<property name="port" value="587"/>
   		<!-- SMTP서버와 통신할 포트 번호를 지정, 포트 587은 TLS(Transport Layer Security)를 사용한 SMTP전송에 일반적으로 사용 -->
   		<property name="username" value="${mailaccount}"/>
   		<property name="password" value="${mailpwd}"/>
   		<property name="javaMailProperties">
   		<!-- 추가적으로 JavaMail속성을 설정하기 위한 속성값 지정 -->
   			<props>
   				<prop key="mail.smtp.starttls.enable">true</prop>
   				<!-- TLS를 사용하여 이메일 전송을 보안하는 것을 활성화한다. TLS는 데이터를 암호화 하여 전송중에 보호 -->
   				<prop key="mail.smtp.auth">true</prop>
   				<!-- SMTP서버에 대한 인증을 요구하는지 여부를 지정. 여기서는 인증이 필요하게끔 처리 -->
   				<prop key="mail.transport.protocol">smtp</prop>
   				<!-- 이메일 전송에 사용할 프로토콜(전송규약- 패킷전송언어) 지정 SMTP라는 패킷전송 언어를 사용하겠다고 선언-->
   				<prop key="mail.debug">true</prop>
   				<!-- 디버그 모드를 활성화 하여 메일 전송과정의 상세 로그를 출력. 개발중에 문제 해결에 유용 -->
   				<prop key="mail.smtp.ssl.true">smtp.gmail.com</prop>
   				<!-- SSL설정 관련 속성 -->
   				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
   				<!-- SSL/TLS 연결에 사용할 프로토콜을 지정, TLS 1.2를 사용하여 보안을 강화 -->
   			</props>
   		</property>	
   	
     </bean> 
      
</beans>  

    